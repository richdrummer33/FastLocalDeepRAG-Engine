{"docstore/metadata": {"83c8e28f-784e-492c-8674-b487a26ee8e7": {"doc_hash": "83d98507bc53c17356597912012a6fae7c63cc3feef4541810deeeb8e9765f2e"}, "9ed78bd1-4b5e-4e2b-a5f2-bf4b24bd8af3": {"doc_hash": "a05fff52ce1fd162ad8a9eb1d8c1f5428e613d9a1e66c7bc42585a40844a7e83"}, "81f47221-d563-45f5-a3d8-668cf6a18cd6": {"doc_hash": "047bbc15a39d75f4bfa915409d422d6fb4cf1d5a961016d1c71b451a884af0df"}, "faf33946-2ea1-40e5-9941-48c6f43b46e9": {"doc_hash": "1b663705f2557ffe523114d4378d241e52c9c87cdddf4582664441ffbc482099"}, "57bac01a-7a21-4bb4-8222-256c2599e055": {"doc_hash": "3e5574d283dfd78de0a895744628d84c29ec25f5e8e317cb960de5fa2609073d"}, "9d13b38c-6205-4a97-83bc-6f7fe6f553ea": {"doc_hash": "59ed0c04755c243838a17835ddaf514c934abe992fed643d420c6ccf3dcd2e84"}, "96631030-05cc-4cf4-9be6-21ffc76452b2": {"doc_hash": "aa7f4f2079b2aa7b8b007e2a737ac8b8ea8de092003119f15e240dc7983dcae9"}, "93e7714d-65f6-4b3c-a27f-b93b86f8384b": {"doc_hash": "964c70781229d4e4bc88ce8452d355183f45037083c09dc158cf511c7e149b75"}, "8b215b2a-e103-4bf4-a2d5-40e9daba2f19": {"doc_hash": "abc05e8b598c52e6dc8af640abbc7cda55b80022a6979f8ba84561b91f2ee169"}, "9d099ce7-9fc3-450b-9745-172936316c0b": {"doc_hash": "192704b5d9948cd01588254590e84ca1b47be1bf4b90fa868bd54dddc21d2169"}, "826f9b57-6e8e-4180-9e0a-7a22dac5233a": {"doc_hash": "be0c4e0fbd5594655d824d1c9f87bebcbca6fcfe4ca6bc66444628ed646f67fb"}, "186d4b17-3752-47d0-aea7-843b190c20d8": {"doc_hash": "040c32911468c832c253f5055cf48424e14859fe4f5c0f002fb951bf2669fb52"}, "9ce57665-913f-4923-b1b3-49d238a86583": {"doc_hash": "2381ba2b41644920c1f9acfb3f8d44c49f35cab0f24cc22930d6f19de99acd1b"}, "8682fe6d-a293-4f6d-8e1f-e0996bc2a370": {"doc_hash": "7640913f5097ebb899acd1eb6f3d5f3db6ae50cba25cdc29f03b112682564c55"}, "105696eb-5c52-4725-9059-6ad97da98512": {"doc_hash": "fb3febbd3dcd9f81e35fe2d9f028a54ed5a09f17ed2e0480cff0569246969471"}, "5958fc38-c64b-42f7-aa04-fda22f944475": {"doc_hash": "d5808bbf701ad6098364aba4fda252a238df389d92115fd431b731417d544be0"}, "b265afad-b5f1-433f-81c4-434fa6c83072": {"doc_hash": "025a1ea1132a0c8b9b7b58ae51ee6deb673a49a7ea7475a4e3d7534c5f105a82"}, "21803d35-4e74-4294-8e79-8729f46f11d0": {"doc_hash": "b597f5d410aca661d7f36d00cac6f7badd08bd588a07677b51a3b6de6b2eed2e"}, "c1cd5590-ef76-4bfe-a955-b9e7ceedc2e5": {"doc_hash": "1ffaaa855afb656755b2e34202baf96fcdfd03f7d034f5008fdf0ffe3c079472"}, "cfc560ba-0db8-4be2-9e42-e6a786ae409f": {"doc_hash": "41270dac7c9e9cf6595783e99b616c784daf8900d56e0ee500c3be558eae3c02", "ref_doc_id": "83c8e28f-784e-492c-8674-b487a26ee8e7"}, "3f8f8ab6-c694-4c1c-abd9-88181f43ef33": {"doc_hash": "adc6d4aa6d6256696a5331fc9607314884d072706a6e658df4f13d2c4717c0ee", "ref_doc_id": "9ed78bd1-4b5e-4e2b-a5f2-bf4b24bd8af3"}, "5bfff0f7-3afd-401a-9e34-e465bd880f62": {"doc_hash": "861c7235b93e7cfa95b861b313e4d96c6054083809f053f193986c13ba629ab6", "ref_doc_id": "81f47221-d563-45f5-a3d8-668cf6a18cd6"}, "6971f14d-8586-4f0c-a2f4-5e6db09099ce": {"doc_hash": "1222ee0b90cf9e1a686c95a1194a6725b01433f9b02d744ce6159975240029db", "ref_doc_id": "81f47221-d563-45f5-a3d8-668cf6a18cd6"}, "51b78c60-7f53-4d3e-a6fc-2a766241ade2": {"doc_hash": "5a710bdcee376bb60a1f4354af6814ba2b5fef8ea92172bd59d5b564b0e47736", "ref_doc_id": "faf33946-2ea1-40e5-9941-48c6f43b46e9"}, "7a91a4ff-82e3-4ed0-af14-f1fc3d0bb22a": {"doc_hash": "cf6baab9a685ecd9a90985b88457e63d21acae8f43c6c1a51f2a2eaa0b1eaa56", "ref_doc_id": "57bac01a-7a21-4bb4-8222-256c2599e055"}, "3a02ec69-2d79-4afa-aa68-de0af1e77b2e": {"doc_hash": "dc1bcb4f9565124e13af58b4866c9a32bea69abe2a8e48b66e84739d2d9a62f1", "ref_doc_id": "9d13b38c-6205-4a97-83bc-6f7fe6f553ea"}, "0e027672-1e2f-4b19-8213-d57589693ed1": {"doc_hash": "a0b6dfb797d617c129cbb84959a8aebe44a37b8f84a945213b059c589de21c51", "ref_doc_id": "96631030-05cc-4cf4-9be6-21ffc76452b2"}, "1ae735e3-42cc-4a24-ba5e-640abf13a209": {"doc_hash": "abb36fbc8aff6278877522dc1fbddbd1a29574b0a078b55d048a6b9c164b2005", "ref_doc_id": "93e7714d-65f6-4b3c-a27f-b93b86f8384b"}, "a8e0f72a-71d2-4bd4-bb05-46abb1145b98": {"doc_hash": "790ad4615eb30c23206556f04b00d0545a1712cd81180795f8262f67cf8c2e44", "ref_doc_id": "8b215b2a-e103-4bf4-a2d5-40e9daba2f19"}, "5b09e0df-25fd-4adc-a8f9-1670d03c8b8d": {"doc_hash": "949cbf32a2cec38c9fa22de2c88ef2740c7fc7617bf3223cfcef393c74e566f8", "ref_doc_id": "9d099ce7-9fc3-450b-9745-172936316c0b"}, "47091a6e-9a52-49dc-a166-7feaeb5402e6": {"doc_hash": "36559cd04cf6d1ae9a6e1dcf5695641f712849ebc779f0e91b41912a03fd37f6", "ref_doc_id": "826f9b57-6e8e-4180-9e0a-7a22dac5233a"}, "ef2bf440-3fbd-487c-a5f0-6796ea6ebba4": {"doc_hash": "14ec26970f28adb4ca2ff1d00b993c8de48d30c14dba744947e7fccf5336df93", "ref_doc_id": "186d4b17-3752-47d0-aea7-843b190c20d8"}, "2b0072c2-4ea8-4949-93ec-8c636ba84d34": {"doc_hash": "84768103a8783da3b144f6f685853fcf0e1ad30f3c8d28b1df98dc6c8c358fc7", "ref_doc_id": "186d4b17-3752-47d0-aea7-843b190c20d8"}, "560ff3a8-1b2d-47e5-9321-ae2034570416": {"doc_hash": "413c8865638d427dc82bd9834044d031e4c0ef748b6771015e8470718704c889", "ref_doc_id": "9ce57665-913f-4923-b1b3-49d238a86583"}, "32e71537-56a2-4bd6-a1b1-289b7575a6f2": {"doc_hash": "8d467ffb17fefe6e097d8261ad8201420835d17fc2ca35768da64e433e29c335", "ref_doc_id": "8682fe6d-a293-4f6d-8e1f-e0996bc2a370"}, "5c5c5898-afa6-4e9e-8c5e-5f7e5ce3e04a": {"doc_hash": "f88fed20ce894e71a71350f28eceb4d296e04f86812c550f499226073daf832e", "ref_doc_id": "105696eb-5c52-4725-9059-6ad97da98512"}, "8cd6e802-02cd-4f0d-ac18-dc187689b6c3": {"doc_hash": "5a9d6b2c0126bbf6c4cf637be581d795ea1006f35009a23bd888a51f195250bb", "ref_doc_id": "5958fc38-c64b-42f7-aa04-fda22f944475"}, "7d4ef21c-c197-4cd2-98bf-13f2fdad3616": {"doc_hash": "39bb2e57d356e70d288c7cf8bc64abd950f9d4b4aecc7ce9c32f54659c8e54a1", "ref_doc_id": "b265afad-b5f1-433f-81c4-434fa6c83072"}, "b14e6cd7-60a4-41c3-81c8-ad3d850b266c": {"doc_hash": "0a04df74930c4a575df7ae11f450face2c34bb6d2c25ce31e33677e66d88911d", "ref_doc_id": "21803d35-4e74-4294-8e79-8729f46f11d0"}, "20122f3c-ee27-4715-97c7-bae3f4b5aab1": {"doc_hash": "dd2374a163113f99ac09d45317ca11ede82a157e0db951c38f5401cf524ad4c1", "ref_doc_id": "c1cd5590-ef76-4bfe-a955-b9e7ceedc2e5"}, "0998a524-92bb-416b-a802-47f00ed2b99b": {"doc_hash": "0f240a83a7f0b6c90c540e94adb992f3e23c9882d472f3ffe172f056593082af", "ref_doc_id": "83c8e28f-784e-492c-8674-b487a26ee8e7"}, "1f1db914-858d-4b2d-8a97-e13edc5df298": {"doc_hash": "fd8657b3c702366e84f4eb89e76f321fff5029bb69c0456c27dd601a2dbf0f7d", "ref_doc_id": "9ed78bd1-4b5e-4e2b-a5f2-bf4b24bd8af3"}, "90586b09-1221-4eeb-828b-e8ea9ba3d365": {"doc_hash": "9e92fc8dfe8c95461b42941529d70517f9db0db57eafaa977fcc8086aa9336d2", "ref_doc_id": "81f47221-d563-45f5-a3d8-668cf6a18cd6"}, "3504817b-7f8b-4e04-ada3-a5449dd0d06d": {"doc_hash": "73365e0147bc538178a691652d4bb7265882ed2fb91605cf33bca1b16c4f3f55", "ref_doc_id": "faf33946-2ea1-40e5-9941-48c6f43b46e9"}, "1d5a1896-5e5c-4fb8-9c06-7957e6ae0a81": {"doc_hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "ref_doc_id": "57bac01a-7a21-4bb4-8222-256c2599e055"}, "849f126a-c0f0-4974-906c-8d60f92fd798": {"doc_hash": "d8775e809d9be31b528988de0bd1af205c5d2695efa4c54fee0b2f7f4a571d1f", "ref_doc_id": "9d13b38c-6205-4a97-83bc-6f7fe6f553ea"}, "75e8e950-2025-4179-ae38-fee619a40971": {"doc_hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "ref_doc_id": "96631030-05cc-4cf4-9be6-21ffc76452b2"}, "098e10f5-5bb3-4c28-83b5-e70697323500": {"doc_hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "ref_doc_id": "93e7714d-65f6-4b3c-a27f-b93b86f8384b"}, "553ee4f6-7a1a-41f1-81e2-e7bdd58cf72d": {"doc_hash": "9a4ac873f34359adee02bef87de40bb74e1c840c47f0dedf3ff27ff4dc116463", "ref_doc_id": "8b215b2a-e103-4bf4-a2d5-40e9daba2f19"}, "e36d0e25-1b2f-4f51-bf36-70a27144fdcf": {"doc_hash": "2b738aa2ab39c455594026a8d9f83d719dcf73dbd7e9ffc2b6c9c00630805746", "ref_doc_id": "9d099ce7-9fc3-450b-9745-172936316c0b"}, "4817ec19-7ca0-4275-ab58-1dba73fe6820": {"doc_hash": "8cfbbd506b457bc0a98221456d55cfbe20bf194ed31fc3df3dd7cdc7ff877a3b", "ref_doc_id": "826f9b57-6e8e-4180-9e0a-7a22dac5233a"}, "dd864b0f-e74e-4045-93a9-43907a9375be": {"doc_hash": "940b33a34f83b91cbeecad40fe9c00132a9f16001d19476dfe4c8a6e75976291", "ref_doc_id": "186d4b17-3752-47d0-aea7-843b190c20d8"}, "bb667218-5021-450a-90cd-aa35275abfa0": {"doc_hash": "1cdffaa1a02a9b19e4b32eaa054ca6436591537fb357d305136f8be523d98237", "ref_doc_id": "9ce57665-913f-4923-b1b3-49d238a86583"}, "6ceee59d-07cd-4c04-9e7b-1829958a5368": {"doc_hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "ref_doc_id": "8682fe6d-a293-4f6d-8e1f-e0996bc2a370"}, "df80d263-493e-4327-b942-e26e81759f3d": {"doc_hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "ref_doc_id": "105696eb-5c52-4725-9059-6ad97da98512"}, "230cfae7-d676-4603-98f8-d1f08b3b7f6d": {"doc_hash": "330c45a9e0f4f03f929f3b6456a48f782710e22c494b5d94b528928cc83f178d", "ref_doc_id": "5958fc38-c64b-42f7-aa04-fda22f944475"}, "8c35afdf-899f-463a-9b5b-06e0505bbc57": {"doc_hash": "66f31114a061edb52eb72eb8bfeea09c179a7ec3affdd0b9331911bb9ae4a5bc", "ref_doc_id": "b265afad-b5f1-433f-81c4-434fa6c83072"}, "c22d2aa8-dc3a-4208-ab08-f0a35a9d58ef": {"doc_hash": "603db494d20b36a41c75180980aa8978d0e536d66db407aa11e773bfdec8ddb7", "ref_doc_id": "21803d35-4e74-4294-8e79-8729f46f11d0"}, "83b846d5-4ddc-4be7-a9dd-35c13f0ddd28": {"doc_hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "ref_doc_id": "c1cd5590-ef76-4bfe-a955-b9e7ceedc2e5"}}, "docstore/data": {"cfc560ba-0db8-4be2-9e42-e6a786ae409f": {"__data__": {"id_": "cfc560ba-0db8-4be2-9e42-e6a786ae409f", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\abstractions.py", "file_name": "abstractions.py", "file_type": "text/x-python", "file_size": 424, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "83c8e28f-784e-492c-8674-b487a26ee8e7", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\abstractions.py", "file_name": "abstractions.py", "file_type": "text/x-python", "file_size": 424, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "83d98507bc53c17356597912012a6fae7c63cc3feef4541810deeeb8e9765f2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f8f8ab6-c694-4c1c-abd9-88181f43ef33", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\api.py", "file_name": "api.py", "file_type": "text/x-python", "file_size": 465, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "adc6d4aa6d6256696a5331fc9607314884d072706a6e658df4f13d2c4717c0ee", "class_name": "RelatedNodeInfo"}}, "hash": "41270dac7c9e9cf6595783e99b616c784daf8900d56e0ee500c3be558eae3c02", "text": "from pydantic import BaseModel\nfrom typing import List\n\n\nclass CompletionResponse(BaseModel):\n    choices: List\n\n\nclass Choice(BaseModel):\n    text: str\n\n\nclass Payload(BaseModel):\n    max_time: float = None\n    max_tokens: int = 100\n    num_return_sequences: int\n    one_line: bool = True\n    prompt: str\n    repetition_penalty: float = 1.\n    temperature: float = 0.1\n    top_k: int\n    top_p: float", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f8f8ab6-c694-4c1c-abd9-88181f43ef33": {"__data__": {"id_": "3f8f8ab6-c694-4c1c-abd9-88181f43ef33", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\api.py", "file_name": "api.py", "file_type": "text/x-python", "file_size": 465, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ed78bd1-4b5e-4e2b-a5f2-bf4b24bd8af3", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\api.py", "file_name": "api.py", "file_type": "text/x-python", "file_size": 465, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "a05fff52ce1fd162ad8a9eb1d8c1f5428e613d9a1e66c7bc42585a40844a7e83", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfc560ba-0db8-4be2-9e42-e6a786ae409f", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\abstractions.py", "file_name": "abstractions.py", "file_type": "text/x-python", "file_size": 424, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "41270dac7c9e9cf6595783e99b616c784daf8900d56e0ee500c3be558eae3c02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bfff0f7-3afd-401a-9e34-e465bd880f62", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "861c7235b93e7cfa95b861b313e4d96c6054083809f053f193986c13ba629ab6", "class_name": "RelatedNodeInfo"}}, "hash": "adc6d4aa6d6256696a5331fc9607314884d072706a6e658df4f13d2c4717c0ee", "text": "import uvicorn\nfrom fastapi import FastAPI\n\nfrom abstractions import Payload, CompletionResponse\nfrom generator import codegen\n\n\nfrom constants import (\n    PORT,\n)\n\napp = FastAPI()\n\n\n@app.post(\"/v1/engines/codegen/completions\", response_model=CompletionResponse)\nasync def completions(payload: Payload):\n    return CompletionResponse(choices=codegen(payload))\n\n\nif __name__ == \"__main__\":\n    uvicorn.run(\"api:app\", host=\"0.0.0.0\", port=PORT)", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bfff0f7-3afd-401a-9e34-e465bd880f62": {"__data__": {"id_": "5bfff0f7-3afd-401a-9e34-e465bd880f62", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "81f47221-d563-45f5-a3d8-668cf6a18cd6", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "047bbc15a39d75f4bfa915409d422d6fb4cf1d5a961016d1c71b451a884af0df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f8f8ab6-c694-4c1c-abd9-88181f43ef33", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\api.py", "file_name": "api.py", "file_type": "text/x-python", "file_size": 465, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "adc6d4aa6d6256696a5331fc9607314884d072706a6e658df4f13d2c4717c0ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6971f14d-8586-4f0c-a2f4-5e6db09099ce", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "1222ee0b90cf9e1a686c95a1194a6725b01433f9b02d744ce6159975240029db", "class_name": "RelatedNodeInfo"}}, "hash": "861c7235b93e7cfa95b861b313e4d96c6054083809f053f193986c13ba629ab6", "text": "import torch\nimport re\nfrom model import get_model\nfrom abstractions import Choice\n\nfrom constants import (\n    STARCODER_TOKENS,\n    LLAMA_TOKENS,\n    INFILL,\n    DEVICE,\n)\n\n\nmodel, tokenizer = get_model()\n\n\ndef get_inputs(prompt):\n    return tokenizer(\n        prompt, return_tensors=\"pt\", padding=True, return_token_type_ids=False\n    ).to(DEVICE)\n\n\ndef get_prefix_suffix(prompt):\n    return (prompt.split(INFILL) + [\"\", \"\"])[:2]\n\n\ndef get_outputs(payload, prompt):\n    with torch.no_grad():\n        outputs = model.generate(\n            **get_inputs(prompt),\n            top_k=payload.top_k,\n            top_p=payload.top_p,\n            num_return_sequences=payload.num_return_sequences,\n            do_sample=True,\n            temperature=payload.temperature,\n            max_new_tokens=payload.max_tokens,\n            pad_token_id=tokenizer.eos_token_id,\n        )\n    return outputs\n\n\ndef get_starcoder_completion(payload):\n    prefix, suffix = get_prefix_suffix(payload.prompt)\n    prompt = f\"{STARCODER_TOKENS['PRE']}{prefix}{STARCODER_TOKENS['SUF']}{suffix}{STARCODER_TOKENS['MID']}\"\n    outputs = get_outputs(payload, prompt)\n    decoded = tokenizer.decode(outputs[0], skip_special_tokens=False)\n    start = decoded.find(STARCODER_TOKENS[\"MID\"]) + len(STARCODER_TOKENS[\"MID\"])\n    end = decoded.find(STARCODER_TOKENS[\"EOD\"], start) or len(decoded)\n    completion = decoded[start:end]\n    try:\n        if not completion:\n            text = \"\"\n        if payload.one_line:\n            text = completion.splitlines()[0] or completion.splitlines()[1]\n    except:\n        text = \"\"\n    return [Choice(text=text)]", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6971f14d-8586-4f0c-a2f4-5e6db09099ce": {"__data__": {"id_": "6971f14d-8586-4f0c-a2f4-5e6db09099ce", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "81f47221-d563-45f5-a3d8-668cf6a18cd6", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "047bbc15a39d75f4bfa915409d422d6fb4cf1d5a961016d1c71b451a884af0df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5bfff0f7-3afd-401a-9e34-e465bd880f62", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "861c7235b93e7cfa95b861b313e4d96c6054083809f053f193986c13ba629ab6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51b78c60-7f53-4d3e-a6fc-2a766241ade2", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\config.example.yml", "file_name": "config.example.yml", "file_type": null, "file_size": 126, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "5a710bdcee376bb60a1f4354af6814ba2b5fef8ea92172bd59d5b564b0e47736", "class_name": "RelatedNodeInfo"}}, "hash": "1222ee0b90cf9e1a686c95a1194a6725b01433f9b02d744ce6159975240029db", "text": "def get_llama_completion(payload):\n    prefix, suffix = get_prefix_suffix(payload.prompt)\n    prompt = f\"{LLAMA_TOKENS['PRE']} {prefix} {LLAMA_TOKENS['SUF']}{suffix} {LLAMA_TOKENS['MID']}\"\n    outputs = get_outputs(payload, prompt)\n    choices = []\n    for output in outputs:\n        text = tokenizer.decode(output, skip_special_tokens=False)\n        match = re.search(r\"<MID>(.*)\", text)\n        if match:\n            completion = match.group(1)\n            completion = completion.replace(\"<EOT></s>\", \"\")\n            choices.append(Choice(text=completion.rstrip()))\n        else:\n            choices.append(Choice(text=\"\"))\n    return choices", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51b78c60-7f53-4d3e-a6fc-2a766241ade2": {"__data__": {"id_": "51b78c60-7f53-4d3e-a6fc-2a766241ade2", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\config.example.yml", "file_name": "config.example.yml", "file_type": null, "file_size": 126, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "faf33946-2ea1-40e5-9941-48c6f43b46e9", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\config.example.yml", "file_name": "config.example.yml", "file_type": null, "file_size": 126, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "1b663705f2557ffe523114d4378d241e52c9c87cdddf4582664441ffbc482099", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6971f14d-8586-4f0c-a2f4-5e6db09099ce", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "1222ee0b90cf9e1a686c95a1194a6725b01433f9b02d744ce6159975240029db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a91a4ff-82e3-4ed0-af14-f1fc3d0bb22a", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\config.yml", "file_name": "config.yml", "file_type": null, "file_size": 186, "creation_date": "2023-11-23", "last_modified_date": "2023-11-23", "last_accessed_date": "2023-11-23"}, "hash": "cf6baab9a685ecd9a90985b88457e63d21acae8f43c6c1a51f2a2eaa0b1eaa56", "class_name": "RelatedNodeInfo"}}, "hash": "5a710bdcee376bb60a1f4354af6814ba2b5fef8ea92172bd59d5b564b0e47736", "text": "model_name: \"bigcode/starcoderbase-3b\"\ntokenizer_name: \"bigcode/starcoderbase-3b\"\nload_in_8bit: False\nload_in_4bit: False", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a91a4ff-82e3-4ed0-af14-f1fc3d0bb22a": {"__data__": {"id_": "7a91a4ff-82e3-4ed0-af14-f1fc3d0bb22a", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\config.yml", "file_name": "config.yml", "file_type": null, "file_size": 186, "creation_date": "2023-11-23", "last_modified_date": "2023-11-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57bac01a-7a21-4bb4-8222-256c2599e055", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\config.yml", "file_name": "config.yml", "file_type": null, "file_size": 186, "creation_date": "2023-11-23", "last_modified_date": "2023-11-23", "last_accessed_date": "2023-11-23"}, "hash": "3e5574d283dfd78de0a895744628d84c29ec25f5e8e317cb960de5fa2609073d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51b78c60-7f53-4d3e-a6fc-2a766241ade2", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\config.example.yml", "file_name": "config.example.yml", "file_type": null, "file_size": 126, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "5a710bdcee376bb60a1f4354af6814ba2b5fef8ea92172bd59d5b564b0e47736", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a02ec69-2d79-4afa-aa68-de0af1e77b2e", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\constants.py", "file_name": "constants.py", "file_type": "text/x-python", "file_size": 715, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "dc1bcb4f9565124e13af58b4866c9a32bea69abe2a8e48b66e84739d2d9a62f1", "class_name": "RelatedNodeInfo"}}, "hash": "cf6baab9a685ecd9a90985b88457e63d21acae8f43c6c1a51f2a2eaa0b1eaa56", "text": "model_name: \"D:\\\\Data\\\\LLM-models\\\\models\\\\Mistral-7B-Instruct-v0.1\"\ntokenizer_name: \"D:\\\\Data\\\\LLM-models\\\\models\\\\Mistral-7B-Instruct-v0.1\"\nload_in_8bit: False\nload_in_4bit: False", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a02ec69-2d79-4afa-aa68-de0af1e77b2e": {"__data__": {"id_": "3a02ec69-2d79-4afa-aa68-de0af1e77b2e", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\constants.py", "file_name": "constants.py", "file_type": "text/x-python", "file_size": 715, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d13b38c-6205-4a97-83bc-6f7fe6f553ea", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\constants.py", "file_name": "constants.py", "file_type": "text/x-python", "file_size": 715, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "59ed0c04755c243838a17835ddaf514c934abe992fed643d420c6ccf3dcd2e84", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a91a4ff-82e3-4ed0-af14-f1fc3d0bb22a", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\config.yml", "file_name": "config.yml", "file_type": null, "file_size": 186, "creation_date": "2023-11-23", "last_modified_date": "2023-11-23", "last_accessed_date": "2023-11-23"}, "hash": "cf6baab9a685ecd9a90985b88457e63d21acae8f43c6c1a51f2a2eaa0b1eaa56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e027672-1e2f-4b19-8213-d57589693ed1", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\docker-compose.yml", "file_name": "docker-compose.yml", "file_type": null, "file_size": 499, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "a0b6dfb797d617c129cbb84959a8aebe44a37b8f84a945213b059c589de21c51", "class_name": "RelatedNodeInfo"}}, "hash": "dc1bcb4f9565124e13af58b4866c9a32bea69abe2a8e48b66e84739d2d9a62f1", "text": "DEVICE = \"cuda\"\n\nPORT = 7000\n\nINFILL = \"<FILL_HERE>\"\n\nLLAMA_TOKENS = {\n    \"EOD\": \"<EOD>\",\n    \"MID\": \"<MID>\",\n    \"PRE\": \"<PRE>\",\n    \"SUF\": \"<SUF>\",\n    \"PAD\": \"<PAD>\",\n}\n\n\nLLAMA_SPECIAL_TOKENS = {\n    \"pad_token\": LLAMA_TOKENS[\"PAD\"],\n}\n\nSTARCODER_TOKENS = {\n    \"EOD\": \"<|endoftext|>\",\n    \"MID\": \"<fim_middle>\",\n    \"PAD\": \"<fim_pad>\",\n    \"PRE\": \"<fim_prefix>\",\n    \"SUF\": \"<fim_suffix>\",\n}\n\nSTARCODER_SPECIAL_TOKENS = {\n    \"additional_special_tokens\": [\n        STARCODER_TOKENS[\"EOD\"],\n        STARCODER_TOKENS[\"PRE\"],\n        STARCODER_TOKENS[\"MID\"],\n        STARCODER_TOKENS[\"SUF\"],\n        STARCODER_TOKENS[\"PAD\"],\n    ],\n    \"pad_token\": STARCODER_TOKENS[\"EOD\"],\n}", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e027672-1e2f-4b19-8213-d57589693ed1": {"__data__": {"id_": "0e027672-1e2f-4b19-8213-d57589693ed1", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\docker-compose.yml", "file_name": "docker-compose.yml", "file_type": null, "file_size": 499, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96631030-05cc-4cf4-9be6-21ffc76452b2", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\docker-compose.yml", "file_name": "docker-compose.yml", "file_type": null, "file_size": 499, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "aa7f4f2079b2aa7b8b007e2a737ac8b8ea8de092003119f15e240dc7983dcae9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a02ec69-2d79-4afa-aa68-de0af1e77b2e", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\constants.py", "file_name": "constants.py", "file_type": "text/x-python", "file_size": 715, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "dc1bcb4f9565124e13af58b4866c9a32bea69abe2a8e48b66e84739d2d9a62f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ae735e3-42cc-4a24-ba5e-640abf13a209", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\Dockerfile", "file_name": "Dockerfile", "file_type": null, "file_size": 381, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "abb36fbc8aff6278877522dc1fbddbd1a29574b0a078b55d048a6b9c164b2005", "class_name": "RelatedNodeInfo"}}, "hash": "a0b6dfb797d617c129cbb84959a8aebe44a37b8f84a945213b059c589de21c51", "text": "version: '3.8'\nservices:\n  app:\n    build: .\n    ports:\n      - \"7000:7000\"\n    volumes:\n      - .:/app\n      - ./config.yml:/app/config.yml\n      - ./models:/app/models\n      - ${HF_CACHE_DIRECTORY}:/root/.cache/huggingface\n    environment:\n      - NVIDIA_VISIBLE_DEVICES=all\n      - PORT=7000\n    deploy:\n      resources:\n        reservations:\n          devices:\n            - driver: nvidia\n              count: 1\n              capabilities: [gpu]\n    env_file:\n      - .env", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ae735e3-42cc-4a24-ba5e-640abf13a209": {"__data__": {"id_": "1ae735e3-42cc-4a24-ba5e-640abf13a209", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\Dockerfile", "file_name": "Dockerfile", "file_type": null, "file_size": 381, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "93e7714d-65f6-4b3c-a27f-b93b86f8384b", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\Dockerfile", "file_name": "Dockerfile", "file_type": null, "file_size": 381, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "964c70781229d4e4bc88ce8452d355183f45037083c09dc158cf511c7e149b75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e027672-1e2f-4b19-8213-d57589693ed1", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\docker-compose.yml", "file_name": "docker-compose.yml", "file_type": null, "file_size": 499, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "a0b6dfb797d617c129cbb84959a8aebe44a37b8f84a945213b059c589de21c51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8e0f72a-71d2-4bd4-bb05-46abb1145b98", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\download.py", "file_name": "download.py", "file_type": "text/x-python", "file_size": 1510, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "790ad4615eb30c23206556f04b00d0545a1712cd81180795f8262f67cf8c2e44", "class_name": "RelatedNodeInfo"}}, "hash": "abb36fbc8aff6278877522dc1fbddbd1a29574b0a078b55d048a6b9c164b2005", "text": "FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04\n\nWORKDIR /app\n\nCOPY . /app\n\nRUN apt-get update && apt-get install -y \\\n    python3-pip git\n\nRUN pip3 install --upgrade pip\n\nCOPY requirements.txt ./\n\nRUN pip install --trusted-host pypi.python.org -r requirements.txt\n\nEXPOSE 7000\n\nENV PORT 7000\n\nCMD [\"uvicorn\", \"api:app\", \"--host\", \"0.0.0.0\", \"--port\", \"7000\"]", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8e0f72a-71d2-4bd4-bb05-46abb1145b98": {"__data__": {"id_": "a8e0f72a-71d2-4bd4-bb05-46abb1145b98", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\download.py", "file_name": "download.py", "file_type": "text/x-python", "file_size": 1510, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b215b2a-e103-4bf4-a2d5-40e9daba2f19", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\download.py", "file_name": "download.py", "file_type": "text/x-python", "file_size": 1510, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "abc05e8b598c52e6dc8af640abbc7cda55b80022a6979f8ba84561b91f2ee169", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ae735e3-42cc-4a24-ba5e-640abf13a209", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\Dockerfile", "file_name": "Dockerfile", "file_type": null, "file_size": 381, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "abb36fbc8aff6278877522dc1fbddbd1a29574b0a078b55d048a6b9c164b2005", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b09e0df-25fd-4adc-a8f9-1670d03c8b8d", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\generator.py", "file_name": "generator.py", "file_type": "text/x-python", "file_size": 810, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "949cbf32a2cec38c9fa22de2c88ef2740c7fc7617bf3223cfcef393c74e566f8", "class_name": "RelatedNodeInfo"}}, "hash": "790ad4615eb30c23206556f04b00d0545a1712cd81180795f8262f67cf8c2e44", "text": "import requests\nimport os\nimport yaml\nfrom tqdm import tqdm\n\nconfig = yaml.safe_load(open(\"./config.yml\"))\n\n\ndef download_file(url, path):\n    os.makedirs(os.path.dirname(path), exist_ok=True)\n    response = requests.get(url, stream=True)\n    total_size_in_bytes = int(response.headers.get(\"content-length\", 0))\n    block_size = 1024\n    progress_bar = tqdm(total=total_size_in_bytes, unit=\"iB\", unit_scale=True)\n\n    with open(path, \"wb\") as file:\n        for data in response.iter_content(block_size):\n            progress_bar.update(len(data))\n            file.write(data)\n\n    progress_bar.close()\n\n\ndef download_model(model_name):\n    destination_folder = \"models\"\n\n    destination = f\"{destination_folder}/{model_name}\"\n\n    if os.path.exists(destination):\n        print(f\"Model already exists {destination}\")\n        return\n\n    base_url = f\"https://huggingface.co/{model_name}/resolve/main\"\n    headers = {\"User-Agent\": \"Hugging Face Python\"}\n\n    response = requests.get(\n        f\"https://huggingface.co/api/models/{model_name}\", headers=headers\n    )\n    response.raise_for_status()\n\n    files_to_download = [file[\"rfilename\"] for file in response.json()[\"siblings\"]]\n\n    os.makedirs(destination, exist_ok=True)\n\n    for file in files_to_download:\n        print(f\"Downloading {file}...\")\n        download_file(f\"{base_url}/{file}\", f\"{destination_folder}/{model_name}/{file}\")\n\n\nif __name__ == \"__main__\":\n    download_model(config[\"model_name\"])", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b09e0df-25fd-4adc-a8f9-1670d03c8b8d": {"__data__": {"id_": "5b09e0df-25fd-4adc-a8f9-1670d03c8b8d", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\generator.py", "file_name": "generator.py", "file_type": "text/x-python", "file_size": 810, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d099ce7-9fc3-450b-9745-172936316c0b", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\generator.py", "file_name": "generator.py", "file_type": "text/x-python", "file_size": 810, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "192704b5d9948cd01588254590e84ca1b47be1bf4b90fa868bd54dddc21d2169", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8e0f72a-71d2-4bd4-bb05-46abb1145b98", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\download.py", "file_name": "download.py", "file_type": "text/x-python", "file_size": 1510, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "790ad4615eb30c23206556f04b00d0545a1712cd81180795f8262f67cf8c2e44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47091a6e-9a52-49dc-a166-7feaeb5402e6", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\LICENCE", "file_name": "LICENCE", "file_type": null, "file_size": 1080, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "36559cd04cf6d1ae9a6e1dcf5695641f712849ebc779f0e91b41912a03fd37f6", "class_name": "RelatedNodeInfo"}}, "hash": "949cbf32a2cec38c9fa22de2c88ef2740c7fc7617bf3223cfcef393c74e566f8", "text": "from abc import ABC, abstractmethod\n\nfrom completion import get_llama_completion, get_starcoder_completion\nfrom model import is_llama_model\nfrom abstractions import Payload\n\n\nclass CodeGeneration(ABC):\n    @abstractmethod\n    def generate(self, model_name_or_path, is_downloaded_model):\n        pass\n\n\nclass LlamaCodeGeneration(CodeGeneration):\n    def generate(self, payload):\n        return get_llama_completion(payload)\n\n\nclass StarCoderCodeGeneration(CodeGeneration):\n    def generate(self, payload):\n        return get_starcoder_completion(payload)\n\n\ndef get_generator():\n    if is_llama_model:\n        return LlamaCodeGeneration()\n    return StarCoderCodeGeneration()\n\n\ndef codegen(payload: Payload):\n    generator = get_generator()\n    return generator.generate(payload)", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47091a6e-9a52-49dc-a166-7feaeb5402e6": {"__data__": {"id_": "47091a6e-9a52-49dc-a166-7feaeb5402e6", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\LICENCE", "file_name": "LICENCE", "file_type": null, "file_size": 1080, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "826f9b57-6e8e-4180-9e0a-7a22dac5233a", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\LICENCE", "file_name": "LICENCE", "file_type": null, "file_size": 1080, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "be0c4e0fbd5594655d824d1c9f87bebcbca6fcfe4ca6bc66444628ed646f67fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b09e0df-25fd-4adc-a8f9-1670d03c8b8d", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\generator.py", "file_name": "generator.py", "file_type": "text/x-python", "file_size": 810, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "949cbf32a2cec38c9fa22de2c88ef2740c7fc7617bf3223cfcef393c74e566f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef2bf440-3fbd-487c-a5f0-6796ea6ebba4", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "14ec26970f28adb4ca2ff1d00b993c8de48d30c14dba744947e7fccf5336df93", "class_name": "RelatedNodeInfo"}}, "hash": "36559cd04cf6d1ae9a6e1dcf5695641f712849ebc779f0e91b41912a03fd37f6", "text": "Copyright (c) 2023 Richard Macarthy\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef2bf440-3fbd-487c-a5f0-6796ea6ebba4": {"__data__": {"id_": "ef2bf440-3fbd-487c-a5f0-6796ea6ebba4", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "186d4b17-3752-47d0-aea7-843b190c20d8", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "040c32911468c832c253f5055cf48424e14859fe4f5c0f002fb951bf2669fb52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47091a6e-9a52-49dc-a166-7feaeb5402e6", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\LICENCE", "file_name": "LICENCE", "file_type": null, "file_size": 1080, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "36559cd04cf6d1ae9a6e1dcf5695641f712849ebc779f0e91b41912a03fd37f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b0072c2-4ea8-4949-93ec-8c636ba84d34", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "84768103a8783da3b144f6f685853fcf0e1ad30f3c8d28b1df98dc6c8c358fc7", "class_name": "RelatedNodeInfo"}}, "hash": "14ec26970f28adb4ca2ff1d00b993c8de48d30c14dba744947e7fccf5336df93", "text": "import yaml\nimport re\nimport os\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\nfrom auto_gptq import AutoGPTQForCausalLM\nfrom abc import ABC, abstractmethod\n\nfrom constants import (\n    LLAMA_SPECIAL_TOKENS as LST,\n    STARCODER_SPECIAL_TOKENS as SCSP,\n    DEVICE,\n)\n\nconfig = yaml.safe_load(open(\"./config.yml\"))\nmodel_name = config[\"model_name\"]\nis_llama_model = re.search(r\"(?i)llama\", model_name)\nis_gptq_model = re.search(r\"(?i)gptq\", model_name)\n\n\nclass ModelLoader(ABC):\n    @abstractmethod\n    def load(self, model_name_or_path, is_downloaded_model):\n        pass\n\n\nclass GPTQLoader(ModelLoader):\n    def load(self, model_name_or_path, _):\n        return AutoGPTQForCausalLM.from_quantized(\n            model_name_or_path, use_safetensors=True\n        ).to(DEVICE)\n\n\nclass BitLoader(ModelLoader):\n    def __init__(self, load_in_4bit, load_in_8bit):\n        self.load_in_4_bit = load_in_4bit\n        self.load_in_8_bit = load_in_8bit\n\n    def load(self, model_name_or_path, is_downloaded_model):\n        return AutoModelForCausalLM.from_pretrained(\n            model_name_or_path,\n            load_in_4bit=self.load_in_4_bit,\n            load_in_8bit=self.load_in_8_bit,\n            device_map=\"auto\",\n            local_files_only=is_downloaded_model,\n        )", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b0072c2-4ea8-4949-93ec-8c636ba84d34": {"__data__": {"id_": "2b0072c2-4ea8-4949-93ec-8c636ba84d34", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "186d4b17-3752-47d0-aea7-843b190c20d8", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "040c32911468c832c253f5055cf48424e14859fe4f5c0f002fb951bf2669fb52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef2bf440-3fbd-487c-a5f0-6796ea6ebba4", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "14ec26970f28adb4ca2ff1d00b993c8de48d30c14dba744947e7fccf5336df93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "560ff3a8-1b2d-47e5-9321-ae2034570416", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "413c8865638d427dc82bd9834044d031e4c0ef748b6771015e8470718704c889", "class_name": "RelatedNodeInfo"}}, "hash": "84768103a8783da3b144f6f685853fcf0e1ad30f3c8d28b1df98dc6c8c358fc7", "text": "class DefaultLoader(ModelLoader):\n    def load(self, model_name_or_path, is_downloaded_model):\n        return AutoModelForCausalLM.from_pretrained(\n            model_name_or_path, local_files_only=is_downloaded_model\n        ).to(DEVICE)\n\n\ndef get_model_loader(is_gptq_model, load_in_4_bit, load_in_8bit):\n    if is_gptq_model:\n        return GPTQLoader()\n    if load_in_4_bit or load_in_8bit:\n        return BitLoader(load_in_4_bit, load_in_8bit)\n    return DefaultLoader()\n\n\ndef get_model():\n    load_in_4bit = config[\"load_in_4bit\"]\n    load_in_8bit = config[\"load_in_8bit\"]\n    tokenizer_name = config[\"tokenizer_name\"]\n    is_llama_model = re.search(r\"(?i)llama\", model_name)\n    is_gptq_model = re.search(r\"(?i)gptq\", model_name)\n    local_model_dir = f\"./models/{model_name}\"\n    is_downloaded_model = os.path.exists(local_model_dir)\n    model_name_or_path = local_model_dir if is_downloaded_model else model_name\n    tokenizer = AutoTokenizer.from_pretrained(tokenizer_name)\n    tokenizer.add_special_tokens(LST if is_llama_model else SCSP)\n    loader = get_model_loader(is_gptq_model, load_in_4bit, load_in_8bit)\n    model = loader.load(model_name_or_path, is_downloaded_model)\n    return model, tokenizer", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "560ff3a8-1b2d-47e5-9321-ae2034570416": {"__data__": {"id_": "560ff3a8-1b2d-47e5-9321-ae2034570416", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ce57665-913f-4923-b1b3-49d238a86583", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "2381ba2b41644920c1f9acfb3f8d44c49f35cab0f24cc22930d6f19de99acd1b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b0072c2-4ea8-4949-93ec-8c636ba84d34", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "84768103a8783da3b144f6f685853fcf0e1ad30f3c8d28b1df98dc6c8c358fc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32e71537-56a2-4bd6-a1b1-289b7575a6f2", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "8d467ffb17fefe6e097d8261ad8201420835d17fc2ca35768da64e433e29c335", "class_name": "RelatedNodeInfo"}}, "hash": "413c8865638d427dc82bd9834044d031e4c0ef748b6771015e8470718704c889", "text": "twinny-api\n\n**A locally hosted AI code completion server similar to GitHub Copilot, but with 100% privacy.**\n\n**Supported models**\n\n- Code Llama (Huggingface and GPTQ versions)\n- StarCoder (Huggingface and GPTQ versions)", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32e71537-56a2-4bd6-a1b1-289b7575a6f2": {"__data__": {"id_": "32e71537-56a2-4bd6-a1b1-289b7575a6f2", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8682fe6d-a293-4f6d-8e1f-e0996bc2a370", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "7640913f5097ebb899acd1eb6f3d5f3db6ae50cba25cdc29f03b112682564c55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "560ff3a8-1b2d-47e5-9321-ae2034570416", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "413c8865638d427dc82bd9834044d031e4c0ef748b6771015e8470718704c889", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c5c5898-afa6-4e9e-8c5e-5f7e5ce3e04a", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "f88fed20ce894e71a71350f28eceb4d296e04f86812c550f499226073daf832e", "class_name": "RelatedNodeInfo"}}, "hash": "8d467ffb17fefe6e097d8261ad8201420835d17fc2ca35768da64e433e29c335", "text": "\ud83d\udce5 Usage\n\nWith `Docker`, `nvidia-docker` and `docker-compose` installed.\n\nRun `./setup.sh` to set your environment variables to `.env` this is your model directories.\n\nCheck and set your options in `config.yml` there are defaults for them but you may need to tweak them.\n\nRun `./start.sh` to start the container.\n\nYou can run everything manually if you want...\n\n```bash\npip install -r requirements.txt\npython api.py\n```\n\nYou can also download models manually by running this command.  If this is not done before starting the api will attempt download the model from huggingface or use your hugginface cache.\n\n```bash\npython download.py bigcode/starcoderbase-1b\n```", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c5c5898-afa6-4e9e-8c5e-5f7e5ce3e04a": {"__data__": {"id_": "5c5c5898-afa6-4e9e-8c5e-5f7e5ce3e04a", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "105696eb-5c52-4725-9059-6ad97da98512", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "fb3febbd3dcd9f81e35fe2d9f028a54ed5a09f17ed2e0480cff0569246969471", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32e71537-56a2-4bd6-a1b1-289b7575a6f2", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "8d467ffb17fefe6e097d8261ad8201420835d17fc2ca35768da64e433e29c335", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8cd6e802-02cd-4f0d-ac18-dc187689b6c3", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "5a9d6b2c0126bbf6c4cf637be581d795ea1006f35009a23bd888a51f195250bb", "class_name": "RelatedNodeInfo"}}, "hash": "f88fed20ce894e71a71350f28eceb4d296e04f86812c550f499226073daf832e", "text": "twinny VSCode Extension\n\nComplement your setup with the twinny VSCode extension, available for download here.\n\nEnjoy personalized and private code completion. \ud83c\udf89", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8cd6e802-02cd-4f0d-ac18-dc187689b6c3": {"__data__": {"id_": "8cd6e802-02cd-4f0d-ac18-dc187689b6c3", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5958fc38-c64b-42f7-aa04-fda22f944475", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "d5808bbf701ad6098364aba4fda252a238df389d92115fd431b731417d544be0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c5c5898-afa6-4e9e-8c5e-5f7e5ce3e04a", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "f88fed20ce894e71a71350f28eceb4d296e04f86812c550f499226073daf832e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d4ef21c-c197-4cd2-98bf-13f2fdad3616", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\requirements.txt", "file_name": "requirements.txt", "file_type": "text/plain", "file_size": 278, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "39bb2e57d356e70d288c7cf8bc64abd950f9d4b4aecc7ce9c32f54659c8e54a1", "class_name": "RelatedNodeInfo"}}, "hash": "5a9d6b2c0126bbf6c4cf637be581d795ea1006f35009a23bd888a51f195250bb", "text": "System requirements\n\nThe models below have been tested and run comfortably on a single nvidia 3090 with decent accuracy and speed, although the GPTQ models run most efficiently from personal experience.\n\n- bigcode/starcoderbase-3b\n- CodeLlama-7b-hf  \n- Code Llama 13b GPTQ", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d4ef21c-c197-4cd2-98bf-13f2fdad3616": {"__data__": {"id_": "7d4ef21c-c197-4cd2-98bf-13f2fdad3616", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\requirements.txt", "file_name": "requirements.txt", "file_type": "text/plain", "file_size": 278, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b265afad-b5f1-433f-81c4-434fa6c83072", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\requirements.txt", "file_name": "requirements.txt", "file_type": "text/plain", "file_size": 278, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "025a1ea1132a0c8b9b7b58ae51ee6deb673a49a7ea7475a4e3d7534c5f105a82", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8cd6e802-02cd-4f0d-ac18-dc187689b6c3", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "5a9d6b2c0126bbf6c4cf637be581d795ea1006f35009a23bd888a51f195250bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b14e6cd7-60a4-41c3-81c8-ad3d850b266c", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\setup.sh", "file_name": "setup.sh", "file_type": "application/x-sh", "file_size": 342, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "0a04df74930c4a575df7ae11f450face2c34bb6d2c25ce31e33677e66d88911d", "class_name": "RelatedNodeInfo"}}, "hash": "39bb2e57d356e70d288c7cf8bc64abd950f9d4b4aecc7ce9c32f54659c8e54a1", "text": "accelerate==0.21.0\nauto-gptq==0.4.2\nbitsandbytes==0.41.1\nfastapi==0.101.1\npackaging==21.3\npydantic==1.10.4\nPyYAML==6.0.1\nRequests==2.31.0\nscipy==1.8.1\ntorch==2.0.1\ntqdm==4.65.0\ntransformers @ git+https://github.com/huggingface/transformers.git@main\nuvicorn==0.23.2", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b14e6cd7-60a4-41c3-81c8-ad3d850b266c": {"__data__": {"id_": "b14e6cd7-60a4-41c3-81c8-ad3d850b266c", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\setup.sh", "file_name": "setup.sh", "file_type": "application/x-sh", "file_size": 342, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21803d35-4e74-4294-8e79-8729f46f11d0", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\setup.sh", "file_name": "setup.sh", "file_type": "application/x-sh", "file_size": 342, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "b597f5d410aca661d7f36d00cac6f7badd08bd588a07677b51a3b6de6b2eed2e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d4ef21c-c197-4cd2-98bf-13f2fdad3616", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\requirements.txt", "file_name": "requirements.txt", "file_type": "text/plain", "file_size": 278, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "39bb2e57d356e70d288c7cf8bc64abd950f9d4b4aecc7ce9c32f54659c8e54a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20122f3c-ee27-4715-97c7-bae3f4b5aab1", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\start.sh", "file_name": "start.sh", "file_type": "application/x-sh", "file_size": 446, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "dd2374a163113f99ac09d45317ca11ede82a157e0db951c38f5401cf524ad4c1", "class_name": "RelatedNodeInfo"}}, "hash": "0a04df74930c4a575df7ae11f450face2c34bb6d2c25ce31e33677e66d88911d", "text": "rm .env\necho \"Creating config file\"\ncp config.example.yml config.yml\necho \"Setting model directories\"\nHF_CACHE_DIRECTORY=\"HF_CACHE_DIRECTORY=$HOME/.cache/huggingface\"\nMODEL_DIRECTORY=\"MODEL_DIRECTORY=./models\"\necho $HF_CACHE_DIRECTORY >> .env\necho $MODEL_DIRECTORY >> .env\necho \"Setup complete, check .env to make sure all went well.\"", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20122f3c-ee27-4715-97c7-bae3f4b5aab1": {"__data__": {"id_": "20122f3c-ee27-4715-97c7-bae3f4b5aab1", "embedding": null, "metadata": {"file_path": "D:\\Git\\twinny-api\\start.sh", "file_name": "start.sh", "file_type": "application/x-sh", "file_size": 446, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1cd5590-ef76-4bfe-a955-b9e7ceedc2e5", "node_type": "4", "metadata": {"file_path": "D:\\Git\\twinny-api\\start.sh", "file_name": "start.sh", "file_type": "application/x-sh", "file_size": 446, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "1ffaaa855afb656755b2e34202baf96fcdfd03f7d034f5008fdf0ffe3c079472", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b14e6cd7-60a4-41c3-81c8-ad3d850b266c", "node_type": "1", "metadata": {"file_path": "D:\\Git\\twinny-api\\setup.sh", "file_name": "setup.sh", "file_type": "application/x-sh", "file_size": 342, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}, "hash": "0a04df74930c4a575df7ae11f450face2c34bb6d2c25ce31e33677e66d88911d", "class_name": "RelatedNodeInfo"}}, "hash": "dd2374a163113f99ac09d45317ca11ede82a157e0db951c38f5401cf524ad4c1", "text": "#!/bin/bash\nsource .env\n\necho \"\"\"\n   __           _                  \n  / /__      __(_)___  ____  __  __\n / __/ | /| / / / __ \\/ __ \\/ / / /\n/ /_ | |/ |/ / / / / / / / / /_/ / \n\\__/ |__/|__/_/_/ /_/_/ /_/\\__, /  \n                          /____/\n\"\"\"  \n\necho \"Huggingface model directory: $HF_CACHE_DIRECTORY\"\necho \"Model directory: ./models\"\necho \"Using config in './config.yml\"\necho \"\"\ncat config.yml\necho \"\"\ndocker-compose up", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0998a524-92bb-416b-a802-47f00ed2b99b": {"__data__": {"id_": "0998a524-92bb-416b-a802-47f00ed2b99b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83c8e28f-784e-492c-8674-b487a26ee8e7", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "0f240a83a7f0b6c90c540e94adb992f3e23c9882d472f3ffe172f056593082af", "text": "Class Definition: The class name is `CompletionResponse` and it is derived from the `BaseModel` class.\n\nClass Role: The class is used to define the structure of the completion response. It has a single attribute called `choices`, which is a list of `Choice` objects.\n\nMethods: There are no methods defined in the `CompletionResponse` class.\n\nFeatures: There are no special features or references mentioned in the given context.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f1db914-858d-4b2d-8a97-e13edc5df298": {"__data__": {"id_": "1f1db914-858d-4b2d-8a97-e13edc5df298", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ed78bd1-4b5e-4e2b-a5f2-bf4b24bd8af3", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "fd8657b3c702366e84f4eb89e76f321fff5029bb69c0456c27dd601a2dbf0f7d", "text": "Class Definition: FastAPI\nClass Role: The FastAPI class is the main class of the FastAPI framework. It is responsible for creating and configuring the FastAPI application.\nMethods: \n- post(\"/v1/engines/codegen/completions\", response_model=CompletionResponse): This method handles POST requests to the \"/v1/engines/codegen/completions\" endpoint. It takes a payload as input and returns a CompletionResponse object as the response.\nFeatures: None mentioned in the given context.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90586b09-1221-4eeb-828b-e8ea9ba3d365": {"__data__": {"id_": "90586b09-1221-4eeb-828b-e8ea9ba3d365", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "81f47221-d563-45f5-a3d8-668cf6a18cd6", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "9e92fc8dfe8c95461b42941529d70517f9db0db57eafaa977fcc8086aa9336d2", "text": "Class Definition: Completion, no base class or interfaces.\n\nClass Role: The Completion class is responsible for generating completions for given prompts using a pre-trained language model. It has methods to get inputs, get prefix and suffix from a prompt, get outputs, and get completions for both Starcoder and Llama prompts.\n\nMethods:\n- get_inputs(prompt): Returns tokenized inputs for a given prompt.\n- get_prefix_suffix(prompt): Splits the prompt into prefix and suffix.\n- get_outputs(payload, prompt): Generates completions for a given payload and prompt.\n- get_starcoder_completion(payload): Generates completions for a Starcoder prompt.\n- get_llama_completion(payload): Generates completions for a Llama prompt.\n\nFeatures: None mentioned in the provided context.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3504817b-7f8b-4e04-ada3-a5449dd0d06d": {"__data__": {"id_": "3504817b-7f8b-4e04-ada3-a5449dd0d06d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "faf33946-2ea1-40e5-9941-48c6f43b46e9", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "73365e0147bc538178a691652d4bb7265882ed2fb91605cf33bca1b16c4f3f55", "text": "Class Definition: Not enough information is provided to determine the class name, base class, and interfaces.\n\nClass Role: Not enough information is provided to determine the class's functionality or any significant class references, dependents, or dependencies.\n\nMethods: Not enough information is provided to list any method names or attributes.\n\nFeatures: Not enough information is provided to determine if there are any special features such as Photon RPC calls.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d5a1896-5e5c-4fb8-9c06-7957e6ae0a81": {"__data__": {"id_": "1d5a1896-5e5c-4fb8-9c06-7957e6ae0a81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57bac01a-7a21-4bb4-8222-256c2599e055", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "text": "Class Definition: N/A\n\nClass Role: N/A\n\nMethods: N/A\n\nFeatures: N/A", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "849f126a-c0f0-4974-906c-8d60f92fd798": {"__data__": {"id_": "849f126a-c0f0-4974-906c-8d60f92fd798", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d13b38c-6205-4a97-83bc-6f7fe6f553ea", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "d8775e809d9be31b528988de0bd1af205c5d2695efa4c54fee0b2f7f4a571d1f", "text": "Class Definition: Constants\nClass Role: The Constants class is a collection of constant values used in the project.\nMethods: None\nFeatures: None", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75e8e950-2025-4179-ae38-fee619a40971": {"__data__": {"id_": "75e8e950-2025-4179-ae38-fee619a40971", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "96631030-05cc-4cf4-9be6-21ffc76452b2", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "text": "Class Definition: N/A\n\nClass Role: N/A\n\nMethods: N/A\n\nFeatures: N/A", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "098e10f5-5bb3-4c28-83b5-e70697323500": {"__data__": {"id_": "098e10f5-5bb3-4c28-83b5-e70697323500", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "93e7714d-65f6-4b3c-a27f-b93b86f8384b", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "text": "Class Definition: N/A\n\nClass Role: N/A\n\nMethods: N/A\n\nFeatures: N/A", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "553ee4f6-7a1a-41f1-81e2-e7bdd58cf72d": {"__data__": {"id_": "553ee4f6-7a1a-41f1-81e2-e7bdd58cf72d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b215b2a-e103-4bf4-a2d5-40e9daba2f19", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "9a4ac873f34359adee02bef87de40bb74e1c840c47f0dedf3ff27ff4dc116463", "text": "Class Definition: download.py\n    - Name: N/A\n    - Base class: N/A\n    - Interfaces: N/A\n\nClass Role: \n    - The class in the given code snippet does not have a specific name or base class. It appears to be a script or module that contains functions related to downloading files and models from the internet. The main functionality of the class is to download files and models using the provided URLs and save them to the specified destination paths. It also checks if the model already exists before downloading it. The class relies on external libraries such as requests, os, yaml, and tqdm for its functionality.\n\nMethods:\n    - download_file(url, path): Downloads a file from the given URL and saves it to the specified path.\n    - download_model(model_name): Downloads a model from the Hugging Face model hub using the provided model name. It retrieves the necessary information about the model from the Hugging Face API and then downloads the model files using the download_file method.\n\nFeatures:\n    - N/A", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e36d0e25-1b2f-4f51-bf36-70a27144fdcf": {"__data__": {"id_": "e36d0e25-1b2f-4f51-bf36-70a27144fdcf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d099ce7-9fc3-450b-9745-172936316c0b", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "2b738aa2ab39c455594026a8d9f83d719dcf73dbd7e9ffc2b6c9c00630805746", "text": "Class Definition: CodeGeneration [base class: ABC]\n\nClass Role: The CodeGeneration class is an abstract base class that defines the functionality for generating code. It has one abstract method called \"generate\" that needs to be implemented by its subclasses. The subclasses of CodeGeneration are LlamaCodeGeneration and StarCoderCodeGeneration.\n\nMethods:\n- generate(payload) [abstract]: This method is responsible for generating code based on the given payload. It needs to be implemented by the subclasses.\n- get_generator(): This method returns an instance of either LlamaCodeGeneration or StarCoderCodeGeneration based on the condition of is_llama_model.\n\nFeatures: None mentioned in the given context.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4817ec19-7ca0-4275-ab58-1dba73fe6820": {"__data__": {"id_": "4817ec19-7ca0-4275-ab58-1dba73fe6820", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "826f9b57-6e8e-4180-9e0a-7a22dac5233a", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "8cfbbd506b457bc0a98221456d55cfbe20bf194ed31fc3df3dd7cdc7ff877a3b", "text": "Class Definition: \nName: UnityDeveloper\nBase Class: None\nInterfaces: None\n\nClass Role: \nThe UnityDeveloper class represents a developer who specializes in Unity, a popular game development engine. This class is responsible for implementing game logic, creating and managing game objects, and handling user input. It may also involve collaborating with other developers and artists to create a cohesive gaming experience. The UnityDeveloper class does not have any significant class references, dependents, or dependencies.\n\nMethods: \n- CreateGameObject [public]: Creates a new game object in the Unity scene.\n- DestroyGameObject [public]: Destroys a specified game object in the Unity scene.\n- UpdateGameLogic [public]: Updates the game logic based on user input and other factors.\n- HandleUserInput [public]: Handles user input events such as mouse clicks or keyboard presses.\n- LoadScene [public]: Loads a new scene in the Unity game.\n- SaveGame [public]: Saves the current game state.\n\nFeatures: \nThe UnityDeveloper class does not have any special features such as Photon RPC calls. However, it can utilize various features provided by the Unity engine, such as physics simulation, animation, and networking capabilities.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd864b0f-e74e-4045-93a9-43907a9375be": {"__data__": {"id_": "dd864b0f-e74e-4045-93a9-43907a9375be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "186d4b17-3752-47d0-aea7-843b190c20d8", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "940b33a34f83b91cbeecad40fe9c00132a9f16001d19476dfe4c8a6e75976291", "text": "Class Definition: ModelLoader [base class: ABC]\n\nClass Role: The ModelLoader class is an abstract base class (ABC) that defines the interface for loading models. It has one abstract method, `load()`, which needs to be implemented by its subclasses.\n\nMethods:\n- `load(model_name_or_path, is_downloaded_model)`: This method is abstract and needs to be implemented by subclasses. It takes two parameters: `model_name_or_path` (the name or path of the model to load) and `is_downloaded_model` (a boolean indicating whether the model is downloaded or not).\n\nClass Definition: GPTQLoader [base class: ModelLoader]\n\nClass Role: The GPTQLoader class is a subclass of ModelLoader. It implements the `load()` method to load a GPTQ model for causal language modeling. It uses the `AutoGPTQForCausalLM` class from the transformers library to load the model.\n\nMethods:\n- `load(model_name_or_path, _)`: This method overrides the `load()` method of the base class. It takes two parameters: `model_name_or_path` (the name or path of the GPTQ model to load) and `_` (a placeholder parameter). It returns an instance of `AutoGPTQForCausalLM` loaded with the specified model.\n\nClass Definition: BitLoader [base class: ModelLoader]\n\nClass Role: The BitLoader class is a subclass of ModelLoader. It implements the `load()` method to load a Bit model for causal language modeling. It uses the `AutoModelForCausalLM` class from the transformers library to load the model.\n\nMethods:\n- `__init__(load_in_4bit, load_in_8bit)`: This is the constructor method of the BitLoader class. It takes two parameters: `load_in_4bit` (a boolean indicating whether to load the model in 4-bit precision) and `load_in_8bit` (a boolean indicating whether to load the model in 8-bit precision).\n- `load(model_name_or_path, is_downloaded_model)`: This method overrides the `load()` method of the base class. It takes two parameters: `model_name_or_path` (the name or path of the Bit model to load) and `is_downloaded_model` (a boolean indicating whether the model is downloaded or not). It returns an instance of `AutoModelForCausalLM` loaded with the specified model, using the specified precision.\n\nClass Definition: DefaultLoader [base class: ModelLoader]\n\nClass Role: The DefaultLoader class is a subclass of ModelLoader. It implements the `load()` method to load a default model for causal language modeling. It uses the `AutoModelForCausalLM` class from the transformers library to load the model.\n\nMethods:\n- `load(model_name_or_path, is_downloaded_model)`: This method overrides the `load()` method of the base class. It takes two parameters: `model_name_or_path` (the name or path of the default model to load) and `is_downloaded_model` (a boolean indicating whether the model is downloaded or not). It returns an instance of `AutoModelForCausalLM` loaded with the specified model.\n\nClass Definition: ModelLoader [base class: ABC]\n\nClass Role: The ModelLoader class is an abstract base class (ABC) that defines the interface for loading models. It has one abstract method, `load()`, which needs to be implemented by its subclasses.\n\nMethods:\n- `load(model_name_or_path, is_downloaded_model)`: This method is abstract and needs to be implemented by subclasses. It takes two parameters: `model_name_or_path` (the name or path of the model to load) and `is_downloaded_model` (a boolean indicating whether the model is downloaded or not).\n\nClass Definition: GPTQLoader [base class: ModelLoader]\n\nClass Role: The GPTQLoader class is a subclass of ModelLoader. It implements the `load()` method to load a GPTQ model for causal language modeling. It uses the `AutoGPTQForCausalLM` class from the transformers library to load the model.\n\nMethods:\n- `load(model_name_or_path, _)`: This method overrides the `load()` method of the base class. It takes two parameters: `model_name_or_path` (the name or path of the GPTQ model to load) and `_` (a placeholder parameter). It returns an instance of `AutoGPTQForCausalLM` loaded with the specified model.\n\nClass Definition: BitLoader [base class: ModelLoader]\n\nClass Role: The BitLoader class is a subclass of ModelLoader. It implements the `load()` method to load a Bit model for causal language modeling. It uses the `AutoModelForCausalLM` class from the transformers library to load the model.\n\nMethods:\n- `__init__(load_in_4bit, load_in_8bit)`: This is the constructor method of the BitLoader class. It takes two parameters: `load_in_4bit` (a boolean indicating whether to load the model in 4-bit precision) and `load_in_8bit` (a boolean indicating whether to load the model in 8-bit precision).\n- `load(model_name_or_path, is_downloaded_model)`: This method overrides the `load()` method of the base class. It takes two parameters: `model_name_or_path` (the name or path of the Bit model to load) and `is_downloaded_model` (a boolean indicating whether the model is downloaded or not). It returns an instance of `AutoModelForCausalLM` loaded with the specified model, using the specified precision.\n\nClass Definition: DefaultLoader [base class: ModelLoader]\n\nClass Role: The DefaultLoader class is a subclass of ModelLoader. It implements the `load()` method to load a default model for causal language modeling. It uses the `AutoModelForCausalLM` class from the transformers library to load the model.\n\nMethods:\n- `load(model_name_or_path, is_downloaded_model)`: This method overrides the `load()` method of the base class. It takes two parameters: `model_name_or_path` (the name or path of the default model to load) and `is_downloaded_model` (a boolean indicating whether the model is downloaded or not). It returns an instance of `AutoModelForCausalLM` loaded with the specified model.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb667218-5021-450a-90cd-aa35275abfa0": {"__data__": {"id_": "bb667218-5021-450a-90cd-aa35275abfa0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ce57665-913f-4923-b1b3-49d238a86583", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "1cdffaa1a02a9b19e4b32eaa054ca6436591537fb357d305136f8be523d98237", "text": "Class Definition: UnityDeveloper, MonoBehaviour\n\nClass Role: The UnityDeveloper class is a MonoBehaviour class in Unity. It serves as a base class for scripts that need to interact with the Unity engine. It provides functionality for handling game events, updating game objects, and managing the game's lifecycle. The UnityDeveloper class does not have any significant class references, dependents, or dependencies.\n\nMethods: \n- Start: [Coroutine] This method is called before the first frame update.\n- Update: [Coroutine] This method is called once per frame.\n- FixedUpdate: [Coroutine] This method is called at a fixed interval, typically used for physics calculations.\n- LateUpdate: [Coroutine] This method is called after all Update methods have been called.\n- OnEnable: [Coroutine] This method is called when the script instance is being loaded.\n- OnDisable: [Coroutine] This method is called when the script instance is being destroyed or disabled.\n- Awake: [Coroutine] This method is called when the script instance is being loaded.\n- OnDestroy: [Coroutine] This method is called when the script instance is being destroyed.\n\nFeatures: The UnityDeveloper class does not have any special features such as Photon RPC calls.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ceee59d-07cd-4c04-9e7b-1829958a5368": {"__data__": {"id_": "6ceee59d-07cd-4c04-9e7b-1829958a5368", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8682fe6d-a293-4f6d-8e1f-e0996bc2a370", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "text": "Class Definition: N/A\n\nClass Role: N/A\n\nMethods: N/A\n\nFeatures: N/A", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df80d263-493e-4327-b942-e26e81759f3d": {"__data__": {"id_": "df80d263-493e-4327-b942-e26e81759f3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "105696eb-5c52-4725-9059-6ad97da98512", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "text": "Class Definition: N/A\n\nClass Role: N/A\n\nMethods: N/A\n\nFeatures: N/A", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "230cfae7-d676-4603-98f8-d1f08b3b7f6d": {"__data__": {"id_": "230cfae7-d676-4603-98f8-d1f08b3b7f6d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5958fc38-c64b-42f7-aa04-fda22f944475", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "330c45a9e0f4f03f929f3b6456a48f782710e22c494b5d94b528928cc83f178d", "text": "Class Definition: UnityDeveloper, MonoBehaviour\n\nClass Role: The UnityDeveloper class is a MonoBehaviour class in Unity. It serves as the base class for all Unity scripts and provides functionality for handling game objects, components, and events in the Unity engine. It does not have any significant class references, dependents, or dependencies.\n\nMethods: \n- Start()\n- Update()\n- FixedUpdate()\n- LateUpdate()\n- OnEnable()\n- OnDisable()\n- OnDestroy()\n\nFeatures: The UnityDeveloper class does not have any special features such as Photon RPC calls.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c35afdf-899f-463a-9b5b-06e0505bbc57": {"__data__": {"id_": "8c35afdf-899f-463a-9b5b-06e0505bbc57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b265afad-b5f1-433f-81c4-434fa6c83072", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "66f31114a061edb52eb72eb8bfeea09c179a7ec3affdd0b9331911bb9ae4a5bc", "text": "Class Definition: UnityDeveloper (no base class or interfaces)\n\nClass Role: The UnityDeveloper class represents a developer who specializes in Unity game development. This class encapsulates the functionality and skills of a Unity developer. It does not have any significant class references, dependents, or dependencies.\n\nMethods: \n- createGameObject [public]: Creates a new game object in the Unity scene.\n- destroyGameObject [public]: Destroys a game object in the Unity scene.\n- instantiatePrefab [public]: Instantiates a prefab object in the Unity scene.\n- loadScene [public]: Loads a new scene in the Unity application.\n- playAnimation [public]: Plays an animation on a game object.\n- spawnEnemy [public]: Spawns an enemy in the game world.\n\nFeatures: The UnityDeveloper class does not have any special features such as Photon RPC calls. It focuses on providing methods and functionality related to Unity game development.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c22d2aa8-dc3a-4208-ab08-f0a35a9d58ef": {"__data__": {"id_": "c22d2aa8-dc3a-4208-ab08-f0a35a9d58ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21803d35-4e74-4294-8e79-8729f46f11d0", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "603db494d20b36a41c75180980aa8978d0e536d66db407aa11e773bfdec8ddb7", "text": "Class Definition: SetupScript, MonoBehaviour\n\nClass Role: The SetupScript class is a MonoBehaviour class in Unity. It is responsible for setting up the configuration file and directories for the Twinny API. It performs tasks such as removing the .env file, creating the config file, setting the model directories, and appending the HF_CACHE_DIRECTORY and MODEL_DIRECTORY to the .env file.\n\nMethods: \n- Start: This method is called when the script is enabled. It is used to initiate the setup process.\n- Setup: This method is responsible for executing the setup steps. It removes the .env file, creates the config file, sets the model directories, and appends the HF_CACHE_DIRECTORY and MODEL_DIRECTORY to the .env file.\n\nFeatures: There are no special features or Photon RPC calls mentioned in the given context.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83b846d5-4ddc-4be7-a9dd-35c13f0ddd28": {"__data__": {"id_": "83b846d5-4ddc-4be7-a9dd-35c13f0ddd28", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1cd5590-ef76-4bfe-a955-b9e7ceedc2e5", "node_type": null, "metadata": {}, "hash": null, "class_name": "RelatedNodeInfo"}}, "hash": "ccb9c8de8b619bae625ee918362a04cb89f479e373f3d4d0d7509d1aa54fbe8f", "text": "Class Definition: N/A\n\nClass Role: N/A\n\nMethods: N/A\n\nFeatures: N/A", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"83c8e28f-784e-492c-8674-b487a26ee8e7": {"node_ids": ["cfc560ba-0db8-4be2-9e42-e6a786ae409f", "0998a524-92bb-416b-a802-47f00ed2b99b"], "metadata": {"file_path": "D:\\Git\\twinny-api\\abstractions.py", "file_name": "abstractions.py", "file_type": "text/x-python", "file_size": 424, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "9ed78bd1-4b5e-4e2b-a5f2-bf4b24bd8af3": {"node_ids": ["3f8f8ab6-c694-4c1c-abd9-88181f43ef33", "1f1db914-858d-4b2d-8a97-e13edc5df298"], "metadata": {"file_path": "D:\\Git\\twinny-api\\api.py", "file_name": "api.py", "file_type": "text/x-python", "file_size": 465, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "81f47221-d563-45f5-a3d8-668cf6a18cd6": {"node_ids": ["5bfff0f7-3afd-401a-9e34-e465bd880f62", "6971f14d-8586-4f0c-a2f4-5e6db09099ce", "90586b09-1221-4eeb-828b-e8ea9ba3d365"], "metadata": {"file_path": "D:\\Git\\twinny-api\\completion.py", "file_name": "completion.py", "file_type": "text/x-python", "file_size": 2341, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "faf33946-2ea1-40e5-9941-48c6f43b46e9": {"node_ids": ["51b78c60-7f53-4d3e-a6fc-2a766241ade2", "3504817b-7f8b-4e04-ada3-a5449dd0d06d"], "metadata": {"file_path": "D:\\Git\\twinny-api\\config.example.yml", "file_name": "config.example.yml", "file_type": null, "file_size": 126, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "57bac01a-7a21-4bb4-8222-256c2599e055": {"node_ids": ["7a91a4ff-82e3-4ed0-af14-f1fc3d0bb22a", "1d5a1896-5e5c-4fb8-9c06-7957e6ae0a81"], "metadata": {"file_path": "D:\\Git\\twinny-api\\config.yml", "file_name": "config.yml", "file_type": null, "file_size": 186, "creation_date": "2023-11-23", "last_modified_date": "2023-11-23", "last_accessed_date": "2023-11-23"}}, "9d13b38c-6205-4a97-83bc-6f7fe6f553ea": {"node_ids": ["3a02ec69-2d79-4afa-aa68-de0af1e77b2e", "849f126a-c0f0-4974-906c-8d60f92fd798"], "metadata": {"file_path": "D:\\Git\\twinny-api\\constants.py", "file_name": "constants.py", "file_type": "text/x-python", "file_size": 715, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "96631030-05cc-4cf4-9be6-21ffc76452b2": {"node_ids": ["0e027672-1e2f-4b19-8213-d57589693ed1", "75e8e950-2025-4179-ae38-fee619a40971"], "metadata": {"file_path": "D:\\Git\\twinny-api\\docker-compose.yml", "file_name": "docker-compose.yml", "file_type": null, "file_size": 499, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "93e7714d-65f6-4b3c-a27f-b93b86f8384b": {"node_ids": ["1ae735e3-42cc-4a24-ba5e-640abf13a209", "098e10f5-5bb3-4c28-83b5-e70697323500"], "metadata": {"file_path": "D:\\Git\\twinny-api\\Dockerfile", "file_name": "Dockerfile", "file_type": null, "file_size": 381, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "8b215b2a-e103-4bf4-a2d5-40e9daba2f19": {"node_ids": ["a8e0f72a-71d2-4bd4-bb05-46abb1145b98", "553ee4f6-7a1a-41f1-81e2-e7bdd58cf72d"], "metadata": {"file_path": "D:\\Git\\twinny-api\\download.py", "file_name": "download.py", "file_type": "text/x-python", "file_size": 1510, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "9d099ce7-9fc3-450b-9745-172936316c0b": {"node_ids": ["5b09e0df-25fd-4adc-a8f9-1670d03c8b8d", "e36d0e25-1b2f-4f51-bf36-70a27144fdcf"], "metadata": {"file_path": "D:\\Git\\twinny-api\\generator.py", "file_name": "generator.py", "file_type": "text/x-python", "file_size": 810, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "826f9b57-6e8e-4180-9e0a-7a22dac5233a": {"node_ids": ["47091a6e-9a52-49dc-a166-7feaeb5402e6", "4817ec19-7ca0-4275-ab58-1dba73fe6820"], "metadata": {"file_path": "D:\\Git\\twinny-api\\LICENCE", "file_name": "LICENCE", "file_type": null, "file_size": 1080, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "186d4b17-3752-47d0-aea7-843b190c20d8": {"node_ids": ["ef2bf440-3fbd-487c-a5f0-6796ea6ebba4", "2b0072c2-4ea8-4949-93ec-8c636ba84d34", "dd864b0f-e74e-4045-93a9-43907a9375be"], "metadata": {"file_path": "D:\\Git\\twinny-api\\model.py", "file_name": "model.py", "file_type": "text/x-python", "file_size": 2576, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "9ce57665-913f-4923-b1b3-49d238a86583": {"node_ids": ["560ff3a8-1b2d-47e5-9321-ae2034570416", "bb667218-5021-450a-90cd-aa35275abfa0"], "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "8682fe6d-a293-4f6d-8e1f-e0996bc2a370": {"node_ids": ["32e71537-56a2-4bd6-a1b1-289b7575a6f2", "6ceee59d-07cd-4c04-9e7b-1829958a5368"], "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "105696eb-5c52-4725-9059-6ad97da98512": {"node_ids": ["5c5c5898-afa6-4e9e-8c5e-5f7e5ce3e04a", "df80d263-493e-4327-b942-e26e81759f3d"], "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "5958fc38-c64b-42f7-aa04-fda22f944475": {"node_ids": ["8cd6e802-02cd-4f0d-ac18-dc187689b6c3", "230cfae7-d676-4603-98f8-d1f08b3b7f6d"], "metadata": {"file_path": "D:\\Git\\twinny-api\\README.md", "file_name": "README.md", "file_type": null, "file_size": 1672, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "b265afad-b5f1-433f-81c4-434fa6c83072": {"node_ids": ["7d4ef21c-c197-4cd2-98bf-13f2fdad3616", "8c35afdf-899f-463a-9b5b-06e0505bbc57"], "metadata": {"file_path": "D:\\Git\\twinny-api\\requirements.txt", "file_name": "requirements.txt", "file_type": "text/plain", "file_size": 278, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "21803d35-4e74-4294-8e79-8729f46f11d0": {"node_ids": ["b14e6cd7-60a4-41c3-81c8-ad3d850b266c", "c22d2aa8-dc3a-4208-ab08-f0a35a9d58ef"], "metadata": {"file_path": "D:\\Git\\twinny-api\\setup.sh", "file_name": "setup.sh", "file_type": "application/x-sh", "file_size": 342, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}, "c1cd5590-ef76-4bfe-a955-b9e7ceedc2e5": {"node_ids": ["20122f3c-ee27-4715-97c7-bae3f4b5aab1", "83b846d5-4ddc-4be7-a9dd-35c13f0ddd28"], "metadata": {"file_path": "D:\\Git\\twinny-api\\start.sh", "file_name": "start.sh", "file_type": "application/x-sh", "file_size": 446, "creation_date": "2023-09-23", "last_modified_date": "2023-09-23", "last_accessed_date": "2023-11-23"}}}}